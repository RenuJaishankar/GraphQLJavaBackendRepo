type Query {
    bookById(id: ID): Book
    arcadeGameById(id: ID): ArcadeGame
    arcadeGames(match : String):[ArcadeGame!]!
    animalById(id: ID): Animal
    fruitById(id: ID): Fruit
    majorsById(id:ID): Major
    animals(match : String):[Animal!]! # The exclamation basically means that the value cannot be null
    fruits(match : String):[Fruit!]! # The exclamation basically means that the value cannot be null
    majors(match : String):[Major!]! # The exclamation means the value cannot be null.
}

type Mutation {
    createArcadeGame(name:String, amountOfPlayers:Int):ArcadeGame!
}


# This is a graphQL comment!
# Cool, huh?
type Animal {
    id: ID
    name: String
    amountOfLegs: Int
}
type Fruit {
    id: ID
    name: String
    state: String
    color:String
}
type Major {

    id:ID
    major:String
    noOfKids: Int

}
type ArcadeGame {
    id: ID
    name: String
    amountOfPlayers: String

}


type Book {
    id: ID
    name: String
    pageCount: Int
    author: Author
}


type Author {
    id: ID
    firstName: String
    lastName: String
}